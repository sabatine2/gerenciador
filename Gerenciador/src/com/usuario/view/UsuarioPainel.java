package com.usuario.view;


import com.usuario.model.Usuario;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.validator.AbstractValidator;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.Button;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.Panel;
import com.vaadin.ui.PasswordField;
import com.vaadin.ui.TextField;
import com.vaadin.ui.VerticalLayout;
import com.vaadin.ui.Button.ClickEvent;
import com.view.componente.Mensagem;

public class UsuarioPainel extends  Panel {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private VerticalLayout verticalLayout_2;
	private HorizontalLayout horizontalLayoutSenha;
	private Button buttonAlterar;
	private PasswordField textFieldSenhaNovaConfirmacao;
	private PasswordField textFieldSenha;
	private PasswordField textFieldSenhaNova;
	private TextField textFieldUser;
    private Usuario usuario;
	
	public UsuarioPainel(Usuario usuario) {
	    this.usuario = usuario;
		this.setCaption("Usu�rio");
		this.setImmediate(false);
		this.setWidth("-1px");
		this.setHeight("100.0%");
		this.setContent(buildVerticalLayout());
	}

	@AutoGenerated
	private VerticalLayout buildVerticalLayout() {
		// common part: create layout
		verticalLayout_2 = new VerticalLayout();
		verticalLayout_2.setImmediate(false);
		verticalLayout_2.setWidth("100.0%");
		verticalLayout_2.setHeight("-1px");
		verticalLayout_2.setMargin(true);
		verticalLayout_2.setSpacing(true);
		
		// textFieldUser
		textFieldUser = new TextField();
		textFieldUser.setCaption("Usu�rio");
		textFieldUser.setImmediate(true);
		textFieldUser.setValue(usuario.getNome());
		textFieldUser.setWidth("500px");
		textFieldUser.setHeight("-1px");
		textFieldUser.setRequired(true);
		textFieldUser.setRequiredError("J� Existe");
		textFieldUser.addValidator(new AbstractValidator("Usu�rio j� existe") {
			
			/**
			 * 
			 */
			private static final long serialVersionUID = 1L;

			@Override
			public boolean isValid(Object value) {
				 if(value.toString().length() <= 4){
					 setErrorMessage("Nome do Usuario com menos de 4 caracteres");
					 return false;	 
				 }
				 
				 if(((Usuario.pesquisaNome(value.toString())== null) || (value.toString().contentEquals(usuario.getNome())))){
					  return true;
				    }
				    else {
				     setErrorMessage("Usu�rio j� existe");
					 return false;
				   }
			}
		});
		
		verticalLayout_2.addComponent(textFieldUser);
		
		// horizontalLayoutSenha
		horizontalLayoutSenha = buildHorizontalLayoutSenha();
		verticalLayout_2.addComponent(horizontalLayoutSenha);
		
		return verticalLayout_2;
	}

	@AutoGenerated
	private HorizontalLayout buildHorizontalLayoutSenha() {
		// common part: create layout
		horizontalLayoutSenha = new HorizontalLayout();
		horizontalLayoutSenha.setImmediate(false);
		horizontalLayoutSenha.setWidth("-1px");
		horizontalLayoutSenha.setHeight("-1px");
		horizontalLayoutSenha.setSpacing(true);
		
		// textFieldSenha
		textFieldSenha = new PasswordField();
		textFieldSenha.setCaption("Senha antiga");
		textFieldSenha.setImmediate(false);
		textFieldSenha.setWidth("-1px");
		textFieldSenha.setHeight("-1px");
		textFieldSenha.setRequired(true);
		textFieldSenha.setRequiredError("Entre com a senha antiga");
		horizontalLayoutSenha.addComponent(textFieldSenha);
		
		// textFieldSenhaNova
		textFieldSenhaNova = new PasswordField();
		textFieldSenhaNova.setCaption("Senha Nova");
		textFieldSenhaNova.setImmediate(false);
		textFieldSenhaNova.setWidth("-1px");
		textFieldSenhaNova.setHeight("-1px");
		textFieldSenhaNova.setRequired(true);
		textFieldSenhaNova.setRequiredError("Entre com a senha");
		horizontalLayoutSenha.addComponent(textFieldSenhaNova);
		
	
		// textFieldSenhaNovaConfirmacao
		textFieldSenhaNovaConfirmacao = new PasswordField();
		textFieldSenhaNovaConfirmacao.setCaption("Senha Nova Confirma��o");
		textFieldSenhaNovaConfirmacao.setImmediate(true);
		textFieldSenhaNovaConfirmacao.setWidth("-1px");
		textFieldSenhaNovaConfirmacao.setHeight("-1px");
		textFieldSenhaNovaConfirmacao.setRequired(true);
		textFieldSenhaNovaConfirmacao.setRequiredError("Entre com a senha de confirma��o");
		textFieldSenhaNovaConfirmacao.addValidator(new AbstractValidator("Senhas Diferentes") {
			
			/**
			 * 
			 */
			private static final long serialVersionUID = 1L;

			@Override
			public boolean isValid(Object value) {
				 if(textFieldSenhaNova.getValue().toString().equals(textFieldSenhaNovaConfirmacao.getValue().toString())){
					   return true;
				    }
				    else {
				    return false;
				 }
			}
		});
		horizontalLayoutSenha.addComponent(textFieldSenhaNovaConfirmacao);
		
		// buttonAlterar
		buttonAlterar = new Button();
		buttonAlterar.addListener(new Button.ClickListener() {
			
			/**
			 * 
			 */
			private static final long serialVersionUID = 1L;

			public void buttonClick(ClickEvent event) {
			  if(event.getButton().getCaption().contentEquals("Alterar senha")){	
	           moduloAlterar();
	           event.getButton().setCaption("Gravar senha");
			  }
			  else{
				 moduloVisualizar();
				 getUsuarioAlteracao();
		         event.getButton().setCaption("Alterar senha");
			  }
	    }});
		buttonAlterar.setCaption("Alterar senha");
		buttonAlterar.setImmediate(false);
		buttonAlterar.setWidth("-1px");
		buttonAlterar.setHeight("-1px");
		horizontalLayoutSenha.addComponent(buttonAlterar);
		horizontalLayoutSenha.setComponentAlignment(buttonAlterar,
				new Alignment(24));
		
		return horizontalLayoutSenha;
	}
	
	public void moduloAdicionar(){
		textFieldSenha.setVisible(false);
		buttonAlterar.setVisible(false);
	}
	
	public void moduloAlterar(){
		textFieldSenhaNovaConfirmacao.setVisible(true);
		textFieldSenha.setVisible(true);
		textFieldSenhaNova.setVisible(true);
		buttonAlterar.setVisible(true);
	}
	
	public void moduloVisualizar(){
		textFieldSenhaNovaConfirmacao.setVisible(false);
		textFieldSenha.setVisible(false);
		textFieldSenhaNova.setVisible(false);
	}
	
	public String senhaAntiga(){
		textFieldSenha.validate();
		return textFieldSenha.getValue().toString();
	}
	
	public String senhaNova(){
		textFieldSenhaNova.validate();
		return textFieldSenhaNova.getValue().toString();
	}
	
	public String senhaNovaConfirmacao(){
		textFieldSenhaNovaConfirmacao.validate();
		return textFieldSenhaNovaConfirmacao.getValue().toString();
	}
	
	public void getUsuarioAlteracao(){
	  Usuario u = Usuario.autenticaUsu(textFieldUser.getValue().toString(), textFieldSenha.getValue().toString());
	  if(u != null){
		  if(getUsuario()!= null){
	      u.setSenha(textFieldSenhaNova.getValue().toString());
	      if(u.alterar()){
	    	  Mensagem.msgConf(this, "Altera��o de Senha", "Senha alterado com sucesso");
	    	  usuario = u;
	      }
	      else {Mensagem.msgErro(this, "Erro ao salvar", "Erro");}
		  }
	  }else {Mensagem.msgErro(this, "Erro", "Senha Antiga Invalida");}
	  
	}
	
	public Usuario getUsuario(){
		textFieldUser.validate();
		textFieldSenhaNovaConfirmacao.validate();
		usuario = new  Usuario();
	 	usuario.setNome(textFieldUser.getValue().toString());
	 	usuario.setSenha(textFieldSenhaNovaConfirmacao.getValue().toString());
		return usuario;
	}

}
