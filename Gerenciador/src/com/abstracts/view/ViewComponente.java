package com.abstracts.view;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.event.Action;
import com.vaadin.ui.Button;
import com.vaadin.ui.Component;
import com.vaadin.ui.CssLayout;
import com.vaadin.ui.VerticalLayout;
import com.vaadin.ui.VerticalSplitPanel;
import com.vaadin.ui.Button.ClickEvent;


public abstract class ViewComponente extends VerticalSplitPanel {
	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	public Button buttonAdicionar;
	public Button buttonClonar;
	public Button buttonSalvar;
	public Button buttonEditar;
	public Button buttonVoltar;
	public Button buttonAlterarSenha;
	public Button buttonDeletar;

	public CssLayout left;
	public CssLayout right;
	
	public VerticalLayout modoLayoutAdd;
    public VerticalLayout modoLayoutTable;
    public VerticalLayout modoLayoutView;
    
    public Component      modoLayoutAtivo;
    
    public static final Action REMOVE_ITEM_ACTION = new Action("Remove");
    
    public ViewComponente()  {
		
		setWidth("100%");
		setHeight("100%");
        addStyleName("small white white");
    	setMargin(true);
		setSplitPosition(9);
		setLocked(true);

		CssLayout css = new CssLayout();
		css.setWidth("100%");
		css.setHeight("98%");
		css.addStyleName("toolbar-invert");
		css.addComponent(buildHorizontalLayoutLeft());
		css.addComponent(buildHorizontalLayoutRight());
			
		addComponent(css);
	}

    public abstract void modoTabela();
    public abstract VerticalLayout modotabelaFiltro();
    public abstract VerticalLayout modovisualizarView();
    public abstract VerticalLayout modoadicionarView();
    
	private CssLayout buildHorizontalLayoutLeft() {
		// common part: create layout
		left = new CssLayout();
		left.setSizeUndefined();
		left.addStyleName("left");
		addComponent(left);
		
		// buttonVoltar
		buttonVoltar = new Button("Voltar",new Button.ClickListener() {
            /**
			 * BOT�O VOLTAR
			 */
			private static final long serialVersionUID = 1L;

			// inline click-listener
            public void buttonClick(ClickEvent event) {
                voltar();
            }
        });
		buttonVoltar.setWidth("-1px");
		buttonVoltar.setHeight("-1px");
		buttonVoltar.setVisible(false);
		left.addComponent(buttonVoltar);
			
		return left;
	}

	@AutoGenerated
	private CssLayout buildHorizontalLayoutRight() {
		// common part: create layout
		right = new CssLayout();
		right.setSizeUndefined();
		right.addStyleName("right");
		addComponent(right);
		
		// buttonClonar
		buttonClonar = new Button();
		buttonClonar.setCaption("Clonar");
		buttonClonar.addStyleName("border-normal");
		buttonClonar.setWidth("-1px");
		buttonClonar.setHeight("-1px");
		buttonClonar.setVisible(false);
		right.addComponent(buttonClonar);
		//buttonDeletar
		buttonDeletar = new Button("Remover",new Button.ClickListener() {
		    /**
			 * BOT�O DELETAR
			 */
			private static final long serialVersionUID = 1L;

			// inline click-listener
		    public void buttonClick(ClickEvent event) {
		    	remover(event.getSource());
		    }
		});
		buttonDeletar.addStyleName("border-normal");
		buttonDeletar.setWidth("-1px");
		buttonDeletar.setHeight("-1px");
		buttonDeletar.setVisible(false);
		right.addComponent(buttonDeletar);
		
		// buttonEditar
		buttonEditar = new Button("Salvar Alteracao",new Button.ClickListener() {
            /**
			 * BOT�O EDITAR
			 */
			private static final long serialVersionUID = 1L;

			// inline click-listener
            public void buttonClick(ClickEvent event) {
                editar();
            }
        });
		buttonEditar.addStyleName("border-normal");
		buttonEditar.setWidth("-1px");
		buttonEditar.setHeight("-1px");
		buttonEditar.setVisible(false);
		right.addComponent(buttonEditar);
		
		// buttonSalvar
		buttonSalvar = new Button("Salvar",new Button.ClickListener() {
            /**
			 * BOT�O SALVAR
			 */
			private static final long serialVersionUID = 1L;

			// inline click-listener
            public void buttonClick(ClickEvent event) {
                salvar();
            }
        });
		buttonSalvar.addStyleName("border-normal");
		buttonSalvar.setWidth("-1px");
		buttonSalvar.setHeight("-1px");
		buttonSalvar.setVisible(false);
		right.addComponent(buttonSalvar);
		
		// buttonAdicionar
		buttonAdicionar = new Button("Adicionar",new Button.ClickListener() {
            /**
			 * BOT�O ADICIONAR
			 */
			private static final long serialVersionUID = 1L;

			// inline click-listener
            public void buttonClick(ClickEvent event) {
                adicionar();          
            }
        });
		buttonAdicionar.addStyleName("border-normal");
		buttonAdicionar.setWidth("-1px");
		buttonAdicionar.setHeight("-1px");
		right.addComponent(buttonAdicionar);
		
		return right;
	}
	
    public abstract void editar();
	public abstract void adicionar();
    public abstract void remover(Object target);
    public abstract void voltar();
    public abstract void salvar(); 
    public abstract void visualizar(Object[] dados);
    
    public void setComponent(Component componet){
           this.modoLayoutAtivo = componet;           	 
     } 
     public Component getComponent(){
    	  return this.modoLayoutAtivo; 
     }
}